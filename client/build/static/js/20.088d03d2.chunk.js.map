{"version":3,"sources":["components/generic/DashboardCard.js","components/Chart.js","pages/Dashboard.js"],"names":["withStyles","theme","card","display","justifyContent","right","color","width","alignItems","padding","left","icon","height","avatar","props","bgColor","classes","react_default","a","createElement","index_es","className","style","backgroundColor","styles","container","textAlign","graphContainer","graphTitle","margin","chart","marginTop","Chart","state","startDate","Date","getTime","endDate","violations","handleStartDateChange","date","_this","setState","updateGraph","handleEndDateChange","setHours","urlParams","fetchHelp","then","res","axios","get","concat","URLSearchParams","toString","headers","status","permitViolations","permitTypeCounter","permitTypesList","map","permit","index","permitType","data","results","violation","requiredPermitType","permitValue","name","Violations","push","dispatch","enqueueSnackbar","message","options","variant","this","_this$state","gutterBottom","component","marginLeft","material_ui_pickers_esm","keyboard","clearable","disableOpenOnEnter","value","onChange","maxdate","disableFuture","format","mask","minDate","es6","strokeDasharray","dataKey","fill","React","Component","connect","ui","formValues","url","method","header","body","fetchHelper","Dashboard","_React$Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","toggleChart","graph","inherits","createClass","key","_this2","today","count","catch","err","console","log","response","Fragment","spacing","lg","md","sm","xs","item","react_router_dom","to","textDecoration","generic_DashboardCard","icons_index_es","utils","DateFnsUtils","components_Chart","compose","withRouter"],"mappings":"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","file":"static/js/20.088d03d2.chunk.js","sourcesContent":["import React from 'react';\nimport { Paper, withStyles, Icon } from '@material-ui/core';\n\nconst styles = theme => ({\n  card: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n  right: {\n    color: '#000000',\n    width: '70%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    padding: '10px',\n  },\n  left: {\n    width: '30%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: '#ffffff',\n  },\n  avatar: {\n    height: '100%',\n  },\n});\n\nconst DashboardCard = props => {\n  const { left, right, bgColor, classes } = props;\n  return (\n    <Paper className={classes.card}>\n      <div className={classes.left} style={{ backgroundColor: bgColor }}>\n        <Icon className={classes.icon}>{left}</Icon>\n      </div>\n      <div className={classes.right}>{right}</div>\n    </Paper>\n  );\n};\n\nexport default withStyles(styles)(DashboardCard);\n","import React from 'react';\nimport { XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, BarChart, Bar } from 'recharts';\nimport { Typography } from '@material-ui/core';\nimport { InlineDatePicker } from 'material-ui-pickers';\nimport { connect } from 'react-redux';\nimport { fetchHelper } from './../actions/AuthActions';\nimport { enqueueSnackbar } from './../actions/UIActions';\nimport axios from 'axios';\n\nconst styles = {\n  container: {\n    textAlign: 'center',\n  },\n  graphContainer: {\n    backgroundColor: '#1baec3',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    color: '#ffffff',\n  },\n  graphTitle: {\n    color: '#ffffff',\n    margin: '10px',\n  },\n  chart: {\n    marginTop: '10px',\n  },\n};\n\nclass Chart extends React.Component {\n  state = {\n    startDate: new Date(new Date().getTime() - 1000 * 60 * 60 * 24 * 7).getTime(),\n    endDate: new Date().getTime(),\n    violations: null,\n  };\n\n  handleStartDateChange = date => {\n    this.setState({ startDate: date.getTime() }, () => this.updateGraph());\n  };\n\n  handleEndDateChange = date => {\n    date.setHours(23, 59, 59, 999);\n    this.setState({ endDate: date.getTime() }, () => this.updateGraph());\n  };\n\n  componentDidMount() {\n    this.updateGraph();\n  }\n\n  updateGraph = () => {\n    let newStartDate = new Date(this.state.startDate).setHours(0, 0, 0, 0);\n    let newEndDate = new Date(this.state.endDate).setHours(23, 59, 59, 999);\n    let urlParams = {\n      startDate: newStartDate,\n      endDate: newEndDate,\n    };\n    this.props.fetchHelp().then(res => {\n      axios\n        .get(`/api/violations/fetchViolations?${new URLSearchParams(urlParams).toString()}`, {\n          headers: res.headers,\n        })\n        .then(res => {\n          if (res.status !== 400) {\n            let permitViolations = [];\n\n            let permitTypeCounter = {};\n            this.props.permitTypesList.map((permit, index) => {\n              permitTypeCounter[permit.permitType] = 0;\n              return null;\n            });\n            let data = res.data.results;\n            data.map(violation => {\n              permitTypeCounter[violation.requiredPermitType]++;\n              return null;\n            });\n            this.props.permitTypesList.map(permit => {\n              let permitValue = {};\n              permitValue.name = permit.permitType;\n              permitValue.Violations = permitTypeCounter[permit.permitType];\n              permitViolations.push(permitValue);\n              return null;\n            });\n            this.setState({ violations: permitViolations });\n          } else {\n            this.props.dispatch(\n              enqueueSnackbar({\n                message: `Failed to fetch data.`,\n                options: {\n                  variant: 'warning',\n                },\n              })\n            );\n          }\n        });\n    });\n  };\n\n  render() {\n    const { startDate, endDate, violations } = this.state;\n    return (\n      <div style={styles.container}>\n        <div style={styles.graphContainer}>\n          <Typography variant='h5' gutterBottom component='h5' style={styles.graphTitle}>\n            Violations\n          </Typography>\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', marginLeft: '20px' }}>\n          <p>Start Date:</p>\n          &nbsp;\n          <InlineDatePicker\n            keyboard={false}\n            clearable\n            disableOpenOnEnter\n            value={startDate}\n            onChange={this.handleStartDateChange}\n            maxdate={new Date()}\n            disableFuture\n            format='MM/dd/yyyy'\n            mask={date => (date ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] : [])}\n          />\n          <p>End Date:</p>\n          &nbsp;\n          <InlineDatePicker\n            keyboard={false}\n            clearable\n            disableOpenOnEnter\n            value={endDate}\n            onChange={this.handleEndDateChange}\n            minDate={startDate}\n            maxdate={new Date()}\n            format='MM/dd/yyyy'\n            disableFuture\n            mask={date => (date ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] : [])}\n          />\n        </div>\n        <br />\n        <div>\n          <ResponsiveContainer width='99%' height={300}>\n            <BarChart width={730} height={250} data={violations} style={styles.chart}>\n              <CartesianGrid strokeDasharray='3 3' />\n              <XAxis dataKey='name' />\n              <YAxis />\n              <Tooltip />\n              <Legend />\n              <Bar dataKey='Violations' fill='#8884d8' />\n            </BarChart>\n          </ResponsiveContainer>\n        </div>\n        <div />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  permitTypesList: state.ui.formValues.permitTypesList,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHelp: (url, method, header, body) => dispatch(fetchHelper(url, method, header, body)),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Chart);\n","import React from 'react';\nimport { Paper, Grid, Typography, withStyles } from '@material-ui/core';\nimport { Error, Search, Map, Settings } from '@material-ui/icons';\nimport { Link, withRouter } from 'react-router-dom';\nimport DashboardCard from '../components/generic/DashboardCard';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { compose } from 'recompose';\nimport { fetchHelper } from '../actions/AuthActions';\nimport Chart from '../components/Chart';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\n\nconst styles = theme => ({\n  icon: {\n    width: '50%',\n    height: '50%',\n  },\n});\n\nexport class Dashboard extends React.Component {\n  state = {\n    violations: 0,\n  };\n\n  componentDidMount() {\n    let today = new Date();\n    let urlParams = {\n      startDate: new Date(today.getTime() - 1000 * 60 * 60 * 24 * 1).getTime(),\n      endDate: today.getTime(),\n    };\n    this.props.fetchHelp().then(res => {\n      axios\n        .get(`/api/violations/fetchViolations?${new URLSearchParams(urlParams).toString()}`, res)\n        .then(res => {\n          let data = res.data.results;\n          let count = 0;\n          data.map(violation => {\n            count++;\n            return null;\n          });\n          this.setState({ violations: count });\n        })\n        .catch(err => console.log(err.response));\n    });\n  }\n\n  toggleChart = () => {\n    this.setState(state => ({ graph: !state.graph }));\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <React.Fragment>\n        <Typography variant='h4' gutterBottom component='h4'>\n          Dashboard\n        </Typography>\n        <Grid container spacing={24}>\n          <Grid lg={3} md={4} sm={6} xs={12} item>\n            <Link to='/users/search' style={{ textDecoration: 'none' }}>\n              <DashboardCard left={<Search className={classes.icon} />} right={'Search, create, edit, and delete users'} bgColor={'#2196f3'} />\n            </Link>\n          </Grid>\n          <Grid lg={3} md={4} sm={6} xs={12} item>\n            <DashboardCard\n              left={<Error className={classes.icon} />}\n              right={`There are ${this.state.violations} violations in the past 24 hours`}\n              bgColor={'#f44336'}\n            />\n          </Grid>\n          <Grid lg={3} md={4} sm={6} xs={12} item>\n            <Link to='/users/heatmap' style={{ textDecoration: 'none' }}>\n              <DashboardCard left={<Map className={classes.icon} />} right={'See a heatmap of the violations'} bgColor={'#7e57c2'} />\n            </Link>\n          </Grid>\n          <Grid lg={3} md={4} sm={6} xs={12} item>\n            <Link to='/users/global' style={{ textDecoration: 'none' }}>\n              <DashboardCard left={<Settings className={classes.icon} />} right={`Change global settings`} bgColor={'#9e9e9e'} />\n            </Link>\n          </Grid>\n          <Grid xs={12} item>\n            <Paper>\n              <MuiPickersUtilsProvider utils={DateFnsUtils}>\n                <Chart toggleChart={this.toggleChart} graph={this.state.graph} />\n              </MuiPickersUtilsProvider>\n            </Paper>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHelp: (url, method, header, body) => dispatch(fetchHelper(url, method, header, body)),\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  connect(\n    null,\n    mapDispatchToProps\n  )\n)(Dashboard);\n"],"sourceRoot":""}