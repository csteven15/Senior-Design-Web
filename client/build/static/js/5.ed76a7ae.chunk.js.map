{"version":3,"sources":["../node_modules/redux-form/es/createFormValueSelector.js","../node_modules/redux-form/es/formValueSelector.js","components/StepperSetter.js","forms/PermitForm.js","components/payment/PurchasePermit.js"],"names":["es_createFormValueSelector","_ref","getIn","form","getFormState","browser_default","nonNullGetFormState","state","_len","arguments","length","fields","Array","_key","reduce","accumulator","field","value","undefined","plain","setIn","__webpack_exports__","compose","withRouter","withStyles","theme","layout","Object","_Users_stevenchen_Fall2018_Group41_Web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","width","marginLeft","marginRight","breakpoints","up","spacing","unit","stepper","padding","concat","icon","color","connect","guestForm","auth","props","classes","activeStep","backgroundColor","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","alternativeLabel","style","map","label","key","DateTimePickerRow","showErrorsInline","_props$input","input","onChange","_props$meta","meta","touched","error","maxDate","minDate","showError","react_default","material_ui_pickers_esm","keyboard","clearable","disableOpenOnEnter","helperText","maxdate","disablePast","format","mask","date","renderSelectField","_ref2","_ref2$meta","children","index_es","margin","required","fullWidth","htmlFor","assign","inputProps","name","toLowerCase","id","renderFromHelper","selector","formValueSelector","PermitForm","price","permitType","startDate","endDate","generatePrice","prevProps","_this","permitValues","permit","Date","getTime","unauthenticated","newStartDate","setHours","newEndDate","fetchData","fetch","method","headers","Content-Type","body","then","res","json","dispatch","change","data","setState","catch","err","console","log","this","purhasePrice","_this2","_this$props","handleSubmit","allowedPermits","purchasePrice","onSubmit","container","item","sm","xs","Field","component","spaceNumber","type","toLocaleString","currency","buttons","variant","onClick","history","goBack","finishGuest","resetPermitForm","resetVehicleForm","push","React","Component","reduxForm","initialValues","destroyOnUnmount","forceUnregisterOnUnmount","validate","values","errors","forEach","button","imageInput","cursor","position","top","bottom","right","left","opacity","FFS","lineHeight","transition","zIndex","transform","transformOrigin","pointerEvents","userSelect","fontSize","display","justifyContent","ownProps","user","finishGuestForm","reset","Fragment","gutterBottom","StepperSetter","utils","DateFnsUtils","forms_PermitForm","logInput"],"mappings":"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","file":"static/js/5.ed76a7ae.chunk.js","sourcesContent":["import invariant from 'invariant';\nimport plain from './structure/plain';\n\nvar createFormValueSelector = function createFormValueSelector(_ref) {\n  var getIn = _ref.getIn;\n  return function (form, getFormState) {\n    invariant(form, 'Form value must be specified');\n\n    var nonNullGetFormState = getFormState || function (state) {\n      return getIn(state, 'form');\n    };\n\n    return function (state) {\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      invariant(fields.length, 'No fields specified');\n      return fields.length === 1 ? // only selecting one field, so return its value\n      getIn(nonNullGetFormState(state), form + \".values.\" + fields[0]) : // selecting many fields, so return an object of field values\n      fields.reduce(function (accumulator, field) {\n        var value = getIn(nonNullGetFormState(state), form + \".values.\" + field);\n        return value === undefined ? accumulator : plain.setIn(accumulator, field, value);\n      }, {});\n    };\n  };\n};\n\nexport default createFormValueSelector;","import createFormValueSelector from './createFormValueSelector';\nimport plain from './structure/plain';\nexport default createFormValueSelector(plain);","import React from 'react';\nimport { Stepper, Step, StepLabel, withStyles } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: '100%',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  icon: {\n    color: 'green',\n  },\n});\n\nconst StepperSetter = props => {\n  const { classes, activeStep, guestForm } = props;\n  const steps = ['Permit', 'Vehicle', 'Payment', 'Review'];\n  let backgroundColor = '#fafafa';\n  if (guestForm) {\n    backgroundColor = '#ffffff';\n  }\n  return (\n    <div className={classes.layout}>\n      <Stepper activeStep={activeStep} className={classes.stepper} alternativeLabel style={{ backgroundColor: backgroundColor }}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  guestForm: state.auth.guestForm,\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  connect(mapStateToProps)\n)(StepperSetter);\n","import React from 'react';\nimport { Button, Select, withStyles, MenuItem, FormLabel, InputLabel, FormHelperText, FormControl, Grid } from '@material-ui/core';\nimport { reset, formValueSelector, reduxForm, Field, change } from 'redux-form';\nimport { withRouter } from 'react-router-dom';\nimport { InlineDatePicker } from 'material-ui-pickers';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { finishGuestForm } from '../actions/AuthActions';\n\nconst styles = () => ({\n  button: {\n    margin: 12,\n  },\n  imageInput: {\n    cursor: 'pointer',\n    position: 'absolute',\n    top: 0,\n    bottom: 0,\n    right: 0,\n    left: 0,\n    width: '100%',\n    opacity: 0,\n  },\n  FFS: {\n    position: 'absolute',\n    lineHeight: '1.5',\n    top: '38',\n    transition: 'none',\n    zIndex: '1',\n    transform: 'none',\n    transformOrigin: 'none',\n    pointerEvents: 'none',\n    userSelect: 'none',\n    fontSize: '16',\n    color: 'rgba(0, 0, 0, 0.8)',\n  },\n  buttons: {\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['permit', 'endDate'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n  if (values.startDate && values.endDate) {\n    if (new Date(values.startDate) > new Date(values.endDate)) {\n      errors.endDate = \"End Date can't be before Start Date\";\n    }\n  }\n  return errors;\n};\n\nconst DateTimePickerRow = props => {\n  const {\n    showErrorsInline,\n    input: { onChange, value },\n    meta: { touched, error },\n    maxDate,\n    minDate,\n  } = props;\n  const showError = showErrorsInline || touched;\n\n  return (\n    <InlineDatePicker\n      keyboard={false}\n      clearable\n      disableOpenOnEnter\n      error={!!(showError && error)}\n      helperText={showError && error}\n      value={value}\n      onChange={onChange}\n      minDate={minDate}\n      maxdate={maxDate}\n      disablePast\n      format='MM/dd/yyyy'\n      mask={date => (date ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] : [])}\n    />\n  );\n};\n\nconst renderFromHelper = ({ touched, error }) => {\n  if (touched && error) {\n    return <FormHelperText>{touched && error}</FormHelperText>;\n  }\n  return null;\n};\n\nconst renderSelectField = ({ input, label, meta: { touched, error }, children }) => (\n  <FormControl error={touched && error} margin='normal' required fullWidth>\n    <InputLabel htmlFor={label}>{label}</InputLabel>\n    <Select\n      {...input}\n      inputProps={{\n        name: label.toLowerCase(),\n        id: label,\n      }}\n    >\n      {children}\n    </Select>\n    {renderFromHelper({ touched, error })}\n  </FormControl>\n);\n\nconst selector = formValueSelector('PermitForm');\nclass PermitForm extends React.Component {\n  state = {\n    price: null,\n    permitType: null,\n    startDate: null,\n    endDate: null,\n  };\n\n  generatePrice = prevProps => {\n    if (this.props.permitValues.permit && this.props.permitValues.startDate && this.props.permitValues.endDate) {\n      const startDate = new Date(this.props.permitValues.startDate).getTime();\n      const endDate = new Date(this.props.permitValues.endDate).getTime();\n      let permitType = this.props.permitValues.permit;\n      if (this.props.unauthenticated) {\n        permitType = {\n          permitType: 'Visitor',\n        };\n      }\n      let newStartDate = new Date(startDate);\n      newStartDate.setHours(0, 0, 0, 0);\n      let newEndDate = new Date(endDate);\n      newEndDate.setHours(23, 59, 59, 999);\n      if (newStartDate <= newEndDate && this.props.permitValues !== prevProps.permitValues) {\n        this.fetchData(permitType, newStartDate, newEndDate);\n      }\n    }\n  };\n\n  fetchData = (permitType, startDate, endDate) => {\n    fetch(`/api/utils/calculatePermitPrice/${permitType.permitType}/${startDate.getTime()}/${endDate.getTime()}`, {\n      method: 'GET',\n      headers: { 'Content-Type': 'application/json' },\n      body: null,\n    })\n      .then(res => res.json())\n      .then(res => {\n        this.props.dispatch(change('PermitForm', 'purchasePrice', res.data));\n        this.setState({\n          price: res.data,\n          startDate: startDate.getTime(),\n          endDate: endDate.getTime(),\n          permitType: permitType,\n        });\n      })\n      .catch(err => console.log(err));\n  };\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.permitValues.permit !== prevProps.permitValues.permit ||\n      this.props.permitValues.purhasePrice !== prevProps.permitValues.purhasePrice ||\n      this.props.permitValues.startDate !== prevProps.permitValues.startDate ||\n      this.props.permitValues.endDate !== prevProps.permitValues.endDate\n    ) {\n      this.generatePrice(prevProps);\n    }\n    return false;\n  }\n\n  render() {\n    const { classes, handleSubmit, allowedPermits, unauthenticated } = this.props;\n    const price = this.props.permitValues.purchasePrice;\n    return (\n      <form onSubmit={handleSubmit}>\n        <Grid container spacing={24}>\n          <Grid item sm={6} xs={12}>\n            <Field name='permit' component={renderSelectField} label='Select a Type' required>\n              {unauthenticated ? (\n                <MenuItem value='Visitor'>Visitor</MenuItem>\n              ) : (\n                allowedPermits.map((permit, key) => (\n                  <MenuItem key={key} value={permit}>\n                    {permit.permitType} {permit.permitType === 'A' ? ` for space ${permit.spaceNumber}` : null}\n                  </MenuItem>\n                ))\n              )}\n            </Field>\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component='legend'>Select a Start Date</FormLabel>\n            <Field id='startDate' name='startDate' component={DateTimePickerRow} required minDate={new Date()} />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component='legend'>Select an Expiration Date</FormLabel>\n            <Field id='endDate' name='endDate' component={DateTimePickerRow} required minDate={this.props.permitValues.startDate} />\n          </Grid>\n          <Grid item xs={12}>\n            <FormLabel component='legend'>Price</FormLabel>\n            <Field name='purchasePrice' component='input' type='hidden' />\n            {price\n              ? (price / 100).toLocaleString('en-US', {\n                  style: 'currency',\n                  currency: 'USD',\n                })\n              : 'Select a permit type to see price.'}\n          </Grid>\n        </Grid>\n        <br />\n        <div className={classes.buttons}>\n          {unauthenticated === true ? (\n            <Button\n              type='button'\n              variant='contained'\n              color='secondary'\n              onClick={() => {\n                this.props.history.goBack();\n                this.props.finishGuest();\n                this.props.resetPermitForm();\n                this.props.resetVehicleForm();\n              }}\n            >\n              Back\n            </Button>\n          ) : (\n            <Button type='button'\n            variant='contained'\n            color='secondary'\n            onClick={() => {\n              this.props.history.push('/');\n              this.props.finishGuest();\n              this.props.resetPermitForm();\n              this.props.resetVehicleForm();\n            }}>\n              Home\n            </Button>\n          )}\n          <Button type='submit' variant='contained' color='secondary'>\n            Next\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  if (ownProps.unauthenticated)\n    return {\n      permitValues: selector(state, 'startDate', 'endDate', 'permit', 'purchasePrice'),\n    };\n  return {\n    allowedPermits: state.auth.user.allowedPermits,\n    guestForm: state.auth.guestForm,\n    permitValues: selector(state, 'permit', 'startDate', 'endDate', 'purchasePrice'),\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  finishGuest: () => dispatch(finishGuestForm()),\n  resetPermitForm: () => dispatch(reset('PermitForm')),\n  resetVehicleForm: () => dispatch(reset('VehiclesForm')),\n});\n\nexport default compose(\n  withRouter,\n  reduxForm({\n    form: 'PermitForm',\n    initialValues: {\n      startDate: new Date(),\n      endDate: new Date(),\n    },\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true,\n    validate,\n  }),\n  withStyles(styles),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(PermitForm);\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { MuiPickersUtilsProvider } from 'material-ui-pickers';\nimport PermitForm from '../../forms/PermitForm';\nimport StepperSetter from '../StepperSetter';\n\nconst logInput = (values, props) => {\n  if (props.unauthenticated) props.history.push('/unauthenticated/page-2');\n  else props.history.push('/authenticated/page-2');\n};\n\nconst PurchasePermit = props => {\n  const { unauthenticated } = props;\n  return (\n    <React.Fragment>\n      <Typography variant='h4' gutterBottom component='h4'>\n        Please Fill out your Permit Information\n      </Typography>\n      <StepperSetter activeStep={0} />\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <PermitForm onSubmit={values => logInput(values, props)} unauthenticated={unauthenticated} />\n      </MuiPickersUtilsProvider>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(PurchasePermit);\n"],"sourceRoot":""}