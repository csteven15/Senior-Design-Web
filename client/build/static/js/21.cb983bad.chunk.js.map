{"version":3,"sources":["pages/HeatMap.js"],"names":["HEATMAP_SOURCE_ID","HeatMap","props","_this","Object","_Users_stevenchen_Fall2018_Group41_Web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_Users_stevenchen_Fall2018_Group41_Web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_Users_stevenchen_Fall2018_Group41_Web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","handleStartDateChange","date","setState","startDate","getTime","updateMap","handleEndDateChange","setHours","endDate","makeFeatureCollection","features","type","makeHeatMapLayer","id","source","maxzoom","paint","heatmap-weight","heatmap-intensity","heatmap-color","heatmap-radius","heatmap-opacity","onViewportChange","viewport","getMap","_mapRef","current","setMapData","map","_getMap","getSource","setData","_mkFeatureCollection","urlParams","Date","state","fetchHelp","then","res","axios","get","concat","URLSearchParams","toString","headers","status","violations","data","results","violation","transformedViolation","geometry","coordinates","location","longitude","latitude","altitude","properties","issuer","licensePlate","push","dispatch","enqueueSnackbar","message","options","variant","today","zoom","bearing","pitch","React","createRef","bind","_Users_stevenchen_Fall2018_Group41_Web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5__","_this2","on","addSource","addLayer","_this$state","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","style","height","react_map_gl__WEBPACK_IMPORTED_MODULE_7__","assign","ref","width","mapStyle","mapboxApiAccessToken","_material_ui_core__WEBPACK_IMPORTED_MODULE_12__","position","right","top","padding","gutterBottom","material_ui_pickers__WEBPACK_IMPORTED_MODULE_13__","keyboard","clearable","disableOpenOnEnter","value","onChange","maxdate","disableFuture","format","mask","minDate","Component","connect","url","method","header","body","fetchHelper"],"mappings":"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","file":"static/js/21.cb983bad.chunk.js","sourcesContent":["import React from 'react';\nimport MapGL from 'react-map-gl';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { fetchHelper } from '../actions/AuthActions';\nimport { enqueueSnackbar } from '../actions/UIActions';\nimport { Typography, Paper } from '@material-ui/core';\nimport { InlineDatePicker } from 'material-ui-pickers';\n\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoic2VhbmF0aGFubWxlZSIsImEiOiJjanJyMWtzdG8xdW10NDlwOXc4bDNtejA3In0.jfEEyI0M1BWfsoEOVe84sA';\nconst HEATMAP_SOURCE_ID = 'permit-violations';\n\nclass HeatMap extends React.Component {\n  constructor(props) {\n    super(props);\n    let today = new Date();\n    this.state = {\n      viewport: {\n        latitude: 28.6024274,\n        longitude: -81.2022486,\n        zoom: 15,\n        bearing: 0,\n        pitch: 0,\n      },\n      startDate: new Date(today.getTime() - 1000 * 60 * 60 * 24).getTime(),\n      endDate: new Date().getTime(),\n      violations: null,\n    };\n\n    this._mapRef = React.createRef();\n    this.handleStartDateChange = this.handleStartDateChange.bind(this);\n    this.handleEndDateChange = this.handleEndDateChange.bind(this);\n  }\n\n  handleStartDateChange = date => {\n    this.setState({ startDate: date.getTime() }, () => this.updateMap());\n  };\n\n  handleEndDateChange = date => {\n    date.setHours(23, 59, 59, 999);\n    this.setState({ endDate: date.getTime() }, () => this.updateMap());\n  };\n\n  makeFeatureCollection = features => ({ type: 'FeatureCollection', features });\n\n  makeHeatMapLayer = (id, source) => {\n    const MAX_ZOOM_LEVEL = 24;\n    return {\n      id,\n      source,\n      maxzoom: MAX_ZOOM_LEVEL,\n      type: 'heatmap',\n      paint: {\n        // Increase the heatmap weight based on frequency and property magnitude\n        'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 1, 1],\n        // Increase the heatmap color weight weight by zoom level\n        // heatmap-intensity is a multiplier on top of heatmap-weight\n        'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\n        // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n        // Begin color ramp at 0-stop with a 0-transparancy color\n        // to create a blur-like effect.\n        'heatmap-color': [\n          'interpolate',\n          ['linear'],\n          ['heatmap-density'],\n          0,\n          'rgba(33,102,172,0)',\n          0.2,\n          'rgb(103,169,207)',\n          0.4,\n          'rgb(209,229,240)',\n          0.6,\n          'rgb(253,219,199)',\n          0.8,\n          'rgb(239,138,98)',\n          1,\n          'rgb(178,24,43)',\n        ],\n        // Adjust the heatmap radius by zoom level\n        'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, MAX_ZOOM_LEVEL, 20],\n        // Transition from heatmap to circle layer by zoom level\n        'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 50, 0],\n      },\n    };\n  };\n\n  onViewportChange = viewport => this.setState({ viewport });\n\n  getMap = () => {\n    return this._mapRef.current ? this._mapRef.current.getMap() : null;\n  };\n\n  setMapData = features => {\n    const map = this._getMap();\n    map && map.getSource(HEATMAP_SOURCE_ID).setData(this._mkFeatureCollection(features));\n  };\n\n  componentDidMount() {\n    const map = this.getMap();\n    let urlParams = {\n      startDate: this.state.startDate,\n      endDate: this.state.endDate,\n    };\n    this.props.fetchHelp().then(res => {\n      axios\n        .get(`/api/violations/fetchViolations?${new URLSearchParams(urlParams).toString()}`, {\n          headers: res.headers,\n        })\n        .then(res => {\n          if (res.status !== 400) {\n            let violations = {\n              type: 'FeatureCollection',\n              features: [],\n            };\n            let data = res.data.results;\n            data.map(violation => {\n              let transformedViolation = {\n                geometry: {\n                  coordinates: [violation.location.longitude, violation.location.latitude, violation.location.altitude],\n                  type: 'Point',\n                },\n                properties: {\n                  date: violation.data,\n                  issuer: violation.issuer,\n                  licensePlate: violation.licensePlate,\n                },\n                type: 'Feature',\n              };\n              violations.features.push(transformedViolation);\n              return 0;\n            });\n            this.setState({ violations: violations }, () => {\n              map.on('load', () => {\n                map.addSource(HEATMAP_SOURCE_ID, {\n                  type: 'geojson',\n                  data: violations,\n                });\n                map.addLayer(this.makeHeatMapLayer('heatmap-layer', HEATMAP_SOURCE_ID));\n              });\n            });\n          } else {\n            this.props.dispatch(\n              enqueueSnackbar({\n                message: `Failed to fetch data.`,\n                options: {\n                  variant: 'warning',\n                },\n              })\n            );\n          }\n        });\n    });\n  }\n\n  updateMap = () => {\n    const map = this.getMap();\n    let newStartDate = new Date(this.state.startDate).setHours(0, 0, 0, 0);\n    let newEndDate = new Date(this.state.endDate).setHours(23, 59, 59, 999);\n    let urlParams = {\n      startDate: newStartDate,\n      endDate: newEndDate,\n    };\n    this.props.fetchHelp().then(res => {\n      axios\n        .get(`/api/violations/fetchViolations?${new URLSearchParams(urlParams).toString()}`, {\n          headers: res.headers,\n        })\n        .then(res => {\n          if (res.status !== 400) {\n            let violations = {\n              type: 'FeatureCollection',\n              features: [],\n            };\n            let data = res.data.results;\n            data.map(violation => {\n              let transformedViolation = {\n                geometry: {\n                  coordinates: [violation.location.longitude, violation.location.latitude, violation.location.altitude],\n                  type: 'Point',\n                },\n                properties: {\n                  date: violation.data,\n                  issuer: violation.issuer,\n                  licensePlate: violation.licensePlate,\n                },\n                type: 'Feature',\n              };\n              violations.features.push(transformedViolation);\n              return 0;\n            });\n            this.setState({ violations: violations }, () => {\n              map.getSource(HEATMAP_SOURCE_ID).setData(this.makeFeatureCollection(violations.features));\n            });\n          } else {\n            this.props.dispatch(\n              enqueueSnackbar({\n                message: `Failed to fetch data.`,\n                options: {\n                  variant: 'warning',\n                },\n              })\n            );\n          }\n        });\n    });\n  };\n\n  render() {\n    const { viewport, startDate, endDate } = this.state;\n    return (\n      <div style={{ height: '100%' }}>\n        <MapGL\n          ref={this._mapRef}\n          {...viewport}\n          width='100%'\n          height='95%'\n          mapStyle='mapbox://styles/mapbox/dark-v9'\n          onViewportChange={this.onViewportChange}\n          mapboxApiAccessToken={MAPBOX_TOKEN}\n        />\n        <Paper\n          style={{\n            width: '250px',\n            position: 'absolute',\n            right: '30px',\n            top: '100px',\n            padding: '20px',\n          }}\n        >\n          <Typography variant='body1' gutterBottom>\n            Showing Heat Map from:\n          </Typography>\n          <Typography variant='body1' gutterBottom>\n            Start Date\n          </Typography>\n          <InlineDatePicker\n            keyboard={false}\n            clearable\n            disableOpenOnEnter\n            value={startDate}\n            onChange={this.handleStartDateChange}\n            maxdate={new Date()}\n            disableFuture\n            format='MM/dd/yyyy'\n            mask={date => (date ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] : [])}\n          />\n          <br />\n          <br />\n          <Typography variant='body1' gutterBottom>\n            End Date\n          </Typography>\n          <InlineDatePicker\n            keyboard={false}\n            clearable\n            disableOpenOnEnter\n            value={endDate}\n            onChange={this.handleEndDateChange}\n            minDate={startDate}\n            maxdate={new Date()}\n            format='MM/dd/yyyy'\n            disableFuture\n            mask={date => (date ? [/\\d/, /\\d/, '/', /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/] : [])}\n          />\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHelp: (url, method, header, body) => dispatch(fetchHelper(url, method, header, body)),\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(HeatMap);\n"],"sourceRoot":""}