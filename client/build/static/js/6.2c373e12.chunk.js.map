{"version":3,"sources":["components/StepperSetter.js","components/StripeInput.js","components/StripeElementWrapper.js","forms/PaymentForm.js","components/payment/PurchasePayment.js"],"names":["compose","withRouter","withStyles","theme","layout","Object","_Users_stevenchen_Fall2018_Group41_Web_client_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","width","marginLeft","marginRight","breakpoints","up","spacing","unit","stepper","padding","concat","icon","color","connect","state","guestForm","auth","props","classes","activeStep","backgroundColor","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","_material_ui_core__WEBPACK_IMPORTED_MODULE_2__","alternativeLabel","style","map","label","key","StripeInput","_this$props","this","c","Component","component","onFocus","onBlur","onChange","react_default","root","placeholder","React","PureComponent","cursor","StripeElementWrapper","focused","empty","error","handleBlur","_this","setState","handleFocus","handleChange","changeObj","autoComplete","_this$state","Fragment","index_es","margin","required","fullWidth","shrink","inputComponent","inputProps","message","renderTextField","_ref","input","disabled","_ref$meta","meta","touched","invalid","custom","objectWithoutProperties","assign","helperText","selector","formValueSelector","PaymentForm","token","updateForm","dispatch","change","initData","handleSubmit","values","stripe","createToken","then","payload","cardPartial","last4","card","brand","expMonth","exp_month","expYear","exp_year","hasOwnProperty","console","log","body","stripeToken","id","car","location","selectedVehicle","purchasePrice","permitValues","startDate","getTime","expirationDate","endDate","unauthenticated","permitType","history","push","pathname","data","email","permit","_this2","window","Stripe","document","querySelector","addEventListener","_this3","onSubmit","bind","container","item","xs","sm","Field","name","autoFocus","components_StripeElementWrapper","CardNumberElement","CardExpiryElement","CardCVCElement","display","justifyContent","type","variant","onClick","goBack","injectStripe","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","validate","errors","forEach","field","fetchHelp","url","method","header","fetchHelper","user","emailAddress","es","apiKey","gutterBottom","StepperSetter","forms_PaymentForm"],"mappings":"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","file":"static/js/6.2c373e12.chunk.js","sourcesContent":["import React from 'react';\nimport { Stepper, Step, StepLabel, withStyles } from '@material-ui/core';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\n\nconst styles = theme => ({\n  layout: {\n    width: 'auto',\n    marginLeft: 'auto',\n    marginRight: 'auto',\n    [theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n      width: '100%',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  stepper: {\n    padding: `${theme.spacing.unit * 3}px 0 ${theme.spacing.unit * 5}px`,\n  },\n  icon: {\n    color: 'green',\n  },\n});\n\nconst StepperSetter = props => {\n  const { classes, activeStep, guestForm } = props;\n  const steps = ['Permit', 'Vehicle', 'Payment', 'Review'];\n  let backgroundColor = '#fafafa';\n  if (guestForm) {\n    backgroundColor = '#ffffff';\n  }\n  return (\n    <div className={classes.layout}>\n      <Stepper activeStep={activeStep} className={classes.stepper} alternativeLabel style={{ backgroundColor: backgroundColor }}>\n        {steps.map(label => (\n          <Step key={label}>\n            <StepLabel>{label}</StepLabel>\n          </Step>\n        ))}\n      </Stepper>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  guestForm: state.auth.guestForm,\n});\n\nexport default compose(\n  withRouter,\n  withStyles(styles),\n  connect(mapStateToProps)\n)(StepperSetter);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = () => ({\n  root: {\n    width: '100%',\n    padding: '6px 0 7px',\n    cursor: 'text',\n  },\n});\n\nclass StripeInput extends React.PureComponent {\n  render() {\n    const { classes: c, component: Component, onFocus, onBlur, onChange } = this.props;\n\n    return <Component className={c.root} onFocus={onFocus} onBlur={onBlur} onChange={onChange} placeholder='' />;\n  }\n}\n\nexport default withStyles(styles)(StripeInput);\n","import React from 'react';\nimport { Input, InputLabel, FormHelperText, FormControl } from '@material-ui/core';\nimport StripeInput from './StripeInput';\n\nclass StripeElementWrapper extends React.PureComponent {\n  state = {\n    focused: false,\n    empty: true,\n    error: false,\n  };\n\n  handleBlur = () => {\n    this.setState({ focused: false });\n  };\n\n  handleFocus = () => {\n    this.setState({ focused: true });\n  };\n\n  handleChange = changeObj => {\n    this.setState({\n      error: changeObj.error,\n      empty: changeObj.empty,\n    });\n  };\n\n  render() {\n    const { component, label, autoComplete } = this.props;\n    const { focused, empty, error } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormControl margin='normal' required fullWidth>\n          <InputLabel autoComplete={autoComplete} focused={focused} shrink={focused || !empty} error={!!error}>\n            {label}\n          </InputLabel>\n          <Input\n            fullWidth\n            inputComponent={StripeInput}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onChange={this.handleChange}\n            inputProps={{ component }}\n            error={!!error}\n          />\n        </FormControl>\n        {error && <FormHelperText error>{error.message}</FormHelperText>}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default StripeElementWrapper;\n","import React from 'react';\nimport { injectStripe, CardNumberElement, CardExpiryElement, CardCVCElement } from 'react-stripe-elements';\nimport { Field, reduxForm, formValueSelector, change } from 'redux-form';\nimport { Grid, TextField, Button, FormControl } from '@material-ui/core';\nimport { compose } from 'recompose';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport StripeElementWrapper from '../components/StripeElementWrapper';\nimport { fetchHelper } from '../actions/AuthActions';\n\nconst validate = values => {\n  const errors = {};\n  const requiredFields = ['email', 'cardNumber', 'cardExpirationDate', 'cardCVC'];\n  requiredFields.forEach(field => {\n    if (!values[field]) {\n      errors[field] = 'Required';\n    }\n  });\n  return errors;\n};\n\nconst renderTextField = ({ label, input, disabled, autoComplete, meta: { touched, invalid, error }, ...custom }) => (\n  <TextField\n    disabled={disabled}\n    label={label}\n    placeholder={label}\n    autoComplete={autoComplete}\n    error={touched && invalid}\n    helperText={touched && error === 'true'}\n    {...input}\n    {...custom}\n  />\n);\nconst selector = formValueSelector('PermitForm');\n\nclass PaymentForm extends React.Component {\n  state = {\n    token: null,\n  };\n\n  componentDidMount() {\n    if (this.props.initData) {\n      this.updateForm();\n    }\n    if (window.Stripe) {\n      this.setState({ token: window.Stripe('pk_test_L4kgEwg67mBcbYydxoBGXQf0') });\n    } else {\n      document.querySelector('#stripe-js').addEventListener('load', () => {\n        // Create Stripe instance once Stripe.js loads\n        this.setState({ token: window.Stripe('pk_test_L4kgEwg67mBcbYydxoBGXQf0') });\n      });\n    }\n  }\n\n  updateForm = () => {\n    this.props.dispatch(change('PermitForm', 'email', this.props.initData));\n  };\n\n  handleSubmit = values => {\n    if (this.props.stripe) {\n      this.props.stripe.createToken().then(payload => {\n        this.setState({ token: payload });\n        const last4 = payload.token.card.last4;\n        const brand = payload.token.card.brand;\n        const expMonth = payload.token.card.exp_month;\n        const expYear = payload.token.card.exp_year;\n        const cardPartial = {\n          last4,\n          brand,\n          expMonth,\n          expYear,\n        };\n        if (payload.hasOwnProperty('error')) {\n          console.log('error');\n        } else {\n          let body = {\n            stripeToken: payload.token.id,\n            car: this.props.location.state.selectedVehicle,\n            purchasePrice: this.props.permitValues.purchasePrice,\n            startDate: this.props.permitValues.startDate.getTime(),\n            expirationDate: this.props.permitValues.endDate.getTime(),\n          };\n          if (this.props.unauthenticated) {\n            let permitType = {\n              permitType: 'Visitor',\n            };\n            body['permitType'] = permitType;\n            this.props.history.push({\n              pathname: '/unauthenticated/page-4',\n              state: {\n                data: body,\n                cardPartial,\n                car: this.props.location.state.selectedVehicle,\n                email: values.email,\n              },\n            });\n          } else {\n            body['permitType'] = this.props.permitValues.permit;\n            this.props.history.push({\n              pathname: '/authenticated/page-4',\n              state: {\n                data: body,\n                cardPartial,\n                car: this.props.location.state.selectedVehicle,\n                email: values.email,\n              },\n            });\n          }\n        }\n      });\n    } else {\n      console.log(\"Stripe.js hasn't loaded yet.\");\n    }\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.props.handleSubmit(this.handleSubmit.bind(this))}>\n        <Grid container spacing={24}>\n          <Grid item xs={12} sm={6}>\n            <FormControl margin='normal' required fullWidth>\n              <Field name='email' component={renderTextField} label='Email Address' autoFocus />\n            </FormControl>\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StripeElementWrapper label='Card Number' component={CardNumberElement} autoComplete={'cardNumber'} />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StripeElementWrapper label='Expiration Date' component={CardExpiryElement} autoComplete={'cardExpiry'} />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <StripeElementWrapper label='Card CVC' component={CardCVCElement} autoComplete={'cardCVC'} />\n          </Grid>\n        </Grid>\n        <br />\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Button type='button' variant='contained' color='secondary' onClick={() => this.props.history.goBack()}>\n            Back\n          </Button>\n          <Button type='submit' variant='contained' color='secondary'>\n            Next\n          </Button>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  permitValues: selector(state, 'startDate', 'endDate', 'permit', 'vehicle', 'purchasePrice'),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchHelp: (url, method, header, body) => dispatch(fetchHelper(url, method, header, body)),\n  dispatch,\n});\n\nexport default compose(\n  withRouter,\n  injectStripe,\n  reduxForm({\n    form: 'PermitForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true,\n    validate,\n  }),\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )\n)(PaymentForm);\n","import React from 'react';\nimport { Typography } from '@material-ui/core';\nimport { Elements, StripeProvider } from 'react-stripe-elements';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport StepperSetter from '../StepperSetter';\nimport PaymentForm from '../../forms/PaymentForm';\n\nconst PurchasePayment = props => {\n  return (\n    <StripeProvider apiKey='pk_test_L4kgEwg67mBcbYydxoBGXQf0'>\n      <React.Fragment>\n        <Typography variant='h4' gutterBottom component='h4'>\n          Please Fill out your Payment Information\n        </Typography>\n        <StepperSetter activeStep={2} />\n        <Elements>\n          <PaymentForm unauthenticated={props.unauthenticated} initData={props.initData} />\n        </Elements>\n      </React.Fragment>\n    </StripeProvider>\n  );\n};\n\nconst mapStateToProps = state => {\n  if (state.auth.user !== null) {\n    return {\n      initData: state.auth.user.emailAddress,\n    };\n  }\n  return {\n    initData: null,\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(PurchasePayment));\n"],"sourceRoot":""}